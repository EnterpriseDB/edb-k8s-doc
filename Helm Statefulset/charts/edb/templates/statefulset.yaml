{{- if eq .Values.deploymentType "Statefulset" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
  {{- if .Values.annotations }}
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "edb.label" . }}
  serviceName: {{ .Values.name }}
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: {{ template "edb.label" . }}
      {{- if .Values.annotations }}
      annotations:
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: edb
      terminationGracePeriodSeconds: 10
      containers:
        - name: edb-database
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args: ["-ec", "/police.sh && /launch.sh"]
          env:
            {{- if .Values.users.useSecrets }}
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: suUser
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}
                  key: suPassword
            {{- else }}
            - name: PG_USER
              value: {{ .Values.users.suUser }}
            - name: PG_PASSWORD
              value: {{ .Values.users.suPassword }}
            {{- end }}
            - name: PGDATA
              value: {{ .Values.config.dataPath }}
            - name: PGDATA_WAL
              value: {{ .Values.config.walPath }}
            - name: PGDATA_ARCHIVE
              value: {{ .Values.config.archivePath }}
            {{- if .Values.config.customConfigmap }}
            - name: USE_CONFIGMAP
              value: "true"
            {{- end }}
            {{- if .Values.config.noRedwoodCompat }}
            - name: NO_REDWOOD_COMPAT
              value: {{ .Values.config.noRedwoodCompat | quote }}
            {{- end }}
            - name: CHARSET
              value: {{ .Values.config.characterSet }}
          ports:
            - name: postgres
              containerPort: {{ .Values.pgconfig.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: {{ .Values.pgconfig.port }}
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: {{ .Values.pgconfig.port }}
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.config.dataPath }}
            - name: wal
              mountPath: {{ .Values.config.walPath }}
            - name: walarchive
              mountPath: {{ .Values.config.archivePath }}
            {{- if .Values.config.customConfigmap }}
            - name: config-volume
              mountPath: /config
            {{- end }}
      volumes:
      {{- if .Values.config.customConfigmap }}
        - name: config-volume
          configMap:
            name: {{ .Values.config.customConfigmap }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.resources.dataSize }}
    - metadata:
        name: wal
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.resources.walSize }}
    - metadata:
        name: walarchive
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.resources.archiveSize }}
{{- end }}
