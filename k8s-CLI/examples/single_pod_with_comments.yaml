---
apiVersion: v1
kind: Service
# Exposes the Service on an internal IP in the cluster. This type makes the Service only reachable from within the cluster.
# Valid values are ClusterIP, NodePort, and LoadBalancer. See https://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/ for more info.
metadata:
  labels:
    # Use the same label for all parts of the application.
    app: edb-epas11-redwood-single
  # The name of the service (same as the pod name).
  name: edb-epas-v11-redwood-single
spec:
  # This can be changed to allow for external trafic.
  # As an alternative for external connectivity look at Jaeger or Traefik.
  type: ClusterIP
  ports:
  - name: postgres
    # Change this to have the service listen on another port.
    port: 5444
    protocol: TCP
    # For PostgreSQL pods set this to 5432.
    targetPort: 5444
  selector:
    # This needs to conform to the label of the pod.
    app: edb-epas11-redwood-single
---
apiVersion: v1
kind: Pod
metadata:
  # The name of the pod (same as the service name).
  name: edb-epas-v11-redwood-single
  labels:
    # Use the same label for all parts of the application.
    app: edb-epas11-redwood-single
spec:
  # The service account used for deploying the pods.
  # The service account should have sufficient permissions.
  serviceAccountName: edb-cli
  imagePullSecrets:
    # Secret name to be used for pulling images from quay.io repository
  - name: quay-regsecret
  containers:
    - name: edb-database
      # Name of the image to be used for running Postgres
      image: "quay.io/enterprisedb/postgres11-advanced-server:latest"
      # Frequency that a new version of the image should be pulled; "Always" will pull on every reschedule.
      imagePullPolicy: Always
      command: ["/bin/bash"]
      args: ["-ec", "/police.sh && /launch.sh"]
          env:
              # The database will be initialized on startup by default.  This value should not need to be changed.
            - name: PG_INITDB
              value: "true"
              # Ignored if secretName exists; the superuser name generally will be (enterprisedb or postgres).
            - name: PG_USER
              # The initial superuser of the cluster.
              value: enterprisedb
              # Ignored if secretName exists; the superuser password MUST be set by the customer if not using secrets.
            - name: PG_PASSWORD
              value: edb
              # The default Postgres data directory. Change path if desired
            - name: PGDATA
              value: /var/lib/edb/data
              # The default Postgres write ahead log directory. Change path if desired
            - name: PGDATA_WAL
              value: /var/lib/edb/wal
              # The default Postgres write ahead log archive directory. Change path if desired
            - name: PGDATA_ARCHIVE
              value: /var/lib/edb/wal_archive
              # Set this to "true" to read custom postgresql.conf settings from a configmap.
            - name: USE_CONFIGMAP
              value: "true"
              # EDB Postgres Advanced Server installs compatibility with Oracle (redwood mode) by default. Set to "true" if compatibility with Oracle is not needed.
            - name: NO_REDWOOD_COMPAT
              value: "false"
              # The default character set used will be UTF8 for the database cluster.  Change to another valid value if desired.
            - name: CHARSET
              value: UTF8
      ports:
          # The port where Postgres will run and be used for the services. The container image has port 5444 and 5432 exposed by default.
          # 5444 is generally used for EDB Postgres Advanced Server and 5432 is generally used for PostgreSQL.
        - name: postgres
          containerPort: 5444
          protocol: TCP
      livenessProbe:
        initialDelaySeconds: 10
        periodSeconds: 10
        tcpSocket:
          port: 5444
      readinessProbe:
        initialDelaySeconds: 10
        periodSeconds: 10
        tcpSocket:
          port: 5444
      resources:
      # See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits for more info.
      # 1000m = 1 uniCore for an EDB subscription
        limits:
          # Set this to configure the max amount of memory available to the container.
          memory: 1Gi
          # Set this to configure the max amount of cpu available to the container.
          cpu: 2
        requests:
          # Set this to configure the memory shares available to the container under pressure.
          memory: 500Mi
          # Set this to configure the cpu hares available to the container under pressure.
          cpu: 1
          volumeMounts:
            - name: config-volume
              # Mount path of volume where a custom_postgresql.conf will be provided that will include any overrides to default postgresql.conf values
              mountPath: /config
      volumes:
          # Name of volume where a custom_postgresql.conf will be provided that will include any overrides to default postgresql.conf values
        - name: config-volume
          configMap:
            # Name of configmap where a custom_postgresql.conf will be provided that will include any overrides to default postgresql.conf values
            name: edb-cli-db-custom-config